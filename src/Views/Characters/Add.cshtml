@model TheMatrixAPI.Models.Character.AddCharacterViewModel
@{ 
    ViewData["Title"] = "Add Character";
    var alignments = new List<SelectListItem>();
    alignments.Add(new SelectListItem
    {
        Text = "Select alignment",
        Value = "0"
    });

    alignments.Add(new SelectListItem
    {
        Text = "Good",
        Value = "1"
    });

    alignments.Add(new SelectListItem
    {
        Text = "Neutral",
        Value = "2"
    });

    alignments.Add(new SelectListItem
    {
        Text = "Bad",
        Value = "3"
    });

    var races = new List<SelectListItem>();
    races.Add(new SelectListItem
    {
        Text = "Select race",
        Value = "0"
    });

    races.AddRange((this.ViewData["Races"] as IEnumerable<TheMatrixAPI.Models.DTO.Race.RaceDTO>).Select(x => new SelectListItem(x.Name, x.Id.ToString())).ToList());
}

<div class="container">
    <h1 class="mt-4">Add Character</h1>

    <div asp-validation-summary="All" class="text-danger"></div>

    <form method="post" asp-controller="characters" asp-action="add">
        <div class="form-group">
            <label asp-for="Name"></label>
            <input asp-for="Name" type="text" class="form-control" />
        </div>
        <div class="form-group">
            <label asp-for="Alignment"></label>
            <select asp-for="Alignment" asp-items="alignments" class="form-control"> </select>
        </div>
        <div class="form=group">
            <label asp-for="RaceId"></label>
            <select asp-for="RaceId" asp-items="races" class="form-control"></select>
        </div>
        <br />
        <div id="quotesList"></div>
        <button onclick="AddQuoteField(event)" class="btn btn-outline-light" style="min-width: 140px">Add Quote</button>
        <br />
        <br />
        <button type="submit" class="btn btn-outline-success" style="min-width: 140px">Add</button>
    </form>

</div>

<script>
    var quoteNumber = 0;
    var quotesListEl = document.getElementById("quotesList");

    function AddQuoteField(e) {
        e.preventDefault();
        var divEl = document.createElement("div");
        divEl.classList.add("form-group");
        divEl.innerHTML = `
            <label name="Quotes">Quote ${++quoteNumber}</label>
            <input name="Quotes" type="text" class="form-control" />
        `;
        quotesListEl.appendChild(divEl);
    }
</script>